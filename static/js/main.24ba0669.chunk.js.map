{"version":3,"sources":["page/solitaria/Square.module.scss","page/solitaria/Game.module.scss","page/Index.tsx","page/solitaria/Square.tsx","page/solitaria/Grid.tsx","page/solitaria/gameLogic.ts","page/solitaria/Game.tsx","page/solitaria/Index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Index","history","to","Square","props","innerClasses","value","push","styles","selected","classes","className","join","onClick","Grid","grid","i","j","Boolean","selectedPos","square_prop","row","col","key","style","display","gridTemplateColumns","gridTemplateRows","MI","DX","DY","POS","Array","from","fill","posToI","y","x","no","can_move","g","d","ni","nj","getDirection","y1","x1","y2","x2","direction","xd","Math","sign","yd","moveToDirection","iToPos","floor","tmp","judge","cnt","posi","di","rotState","state","res","BigInt","b1","pos","H","flipState","W","revMove","dfs","arrived","toState","has","size","judge_res","map","v","st","add","getInitialGrid","length","Number","Game","useState","selectPos","setHistory","stepNo","setStepNo","playHistory","setPlayHistory","currentGrid","useEffect","interval","setInterval","clearInterval","r","w","GameLogic","copyGrid","slice","marginBottom","text","status","color","green","useTheme","palette","error","main","Typography","variant","align","statuText","Stack","spacing","aria-label","ArrowBack","ArrowForward","Button","Set","reverse","alert","width","margin","href","App","basename","process","exact","path","component","Solitaria","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24ba0669.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__1x4Sp\",\"block\":\"Square_block__1_Zjb\",\"ball\":\"Square_ball__22ruA\",\"selected\":\"Square_selected__2h2I_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__1VLAV\",\"game-grid\":\"Game_game-grid__3Y1JZ\"};","import * as React from 'react'\nimport { Link, RouteComponentProps } from 'react-router-dom'\n\ntype Props = RouteComponentProps\n\nconst Index = ({ history }: Props) => {\n  return (\n    <div>\n      <h1>React 習作</h1>\n      <ul>\n        <li>\n          <Link to=\"/solitaria\">ペグソリティア</Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Index\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport styles from './Square.module.scss'\n\ntype Props = {\n  value: number\n  row: number\n  col: number\n  selected: boolean\n  onClick: (event: React.MouseEvent<HTMLDivElement>) => void\n}\n\nconst Square: React.FC<Props> = (props: Props) => {\n  const innerClasses = []\n  if (props.value == 1) innerClasses.push(styles['ball'])\n  if (props.selected) innerClasses.push(styles['selected'])\n\n  const classes = [styles['square']]\n  if (props.value < 0) classes.push(styles['block'])\n\n  return (\n    <div className={classes.join(' ')} onClick={props.onClick}>\n      <div className={innerClasses.join(' ')}></div>\n    </div>\n  )\n}\n\nexport default Square\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport Square from './Square'\ntype Props = {\n  grid: Array<Array<number>>\n  onClick: (r: number, w: number) => void\n  selectedPos: Array<number> | null\n}\n\nconst Grid: React.FC<Props> = (props: Props) => {\n  const grid = []\n  for (let i = 0; i < 7; i++) {\n    for (let j = 0; j < 7; j++) {\n      const selected = Boolean(\n        props.selectedPos &&\n          props.selectedPos[0] == i &&\n          props.selectedPos[1] == j\n      )\n\n      const square_prop = {\n        row: i,\n        col: j,\n        selected: selected,\n        value: props.grid[i][j],\n        onClick: () => {\n          props.onClick(i, j)\n        },\n      }\n      grid.push(<Square {...square_prop} key={i * 7 + j} />)\n    }\n  }\n\n  const style = {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(7, 80px)',\n    gridTemplateRows: 'repeat(7, 80px)',\n  }\n  return <div style={style}>{grid}</div>\n}\n\nexport default Grid\n","/* 競プロのノリで書いた 反省してない */\nconst MI = 33\nconst H = 7\nconst W = 7\n\nconst DX = [0, 1, 0, -1]\nconst DY = [1, 0, -1, 0]\n\nconst POS = Array.from(new Array(H), () => new Array(W).fill(0))\n\n;(() => {\n  let no = 0\n  for (let i = 0; i < 2; i++) {\n    for (let j = 2; j < 2 + 3; j++) {\n      POS[i][j] = no\n      no++\n    }\n  }\n  for (let i = 2; i < 2 + 3; i++) {\n    for (let j = 0; j < 7; j++) {\n      POS[i][j] = no++\n    }\n  }\n  for (let i = 2 + 3; i < 7; i++) {\n    for (let j = 2; j < 2 + 3; j++) {\n      POS[i][j] = no\n      no++\n    }\n  }\n})()\n\nfunction posToI(y: number, x: number) {\n  return POS[y][x]\n}\n\nconst can_move = (g: Array<Array<number>>, y: number, x: number, d: number) => {\n  if (g[y][x] != 1) return false\n  for (let i = 0; i < 2; i++) {\n    const ni = y + DY[d] * (i + 1)\n    const nj = x + DX[d] * (i + 1)\n    if (ni < 0 || ni >= H || nj < 0 || nj >= W) return false\n    if (g[ni][nj] == -1) return false\n    if (g[ni][nj] == i) return false\n  }\n  return true\n}\n\nconst getDirection = (y1: number, x1: number, y2: number, x2: number) => {\n  let direction = -1\n  const xd = Math.sign(x2 - x1)\n  const yd = Math.sign(y2 - y1)\n  for (let i = 0; i < 4; i++) {\n    if (DY[i] == yd && DX[i] == xd) {\n      direction = i\n      break\n    }\n  }\n  return direction\n}\n\nexport const canMove = (\n  g: Array<Array<number>>,\n  y1: number,\n  x1: number,\n  y2: number,\n  x2: number\n) => {\n  const d = getDirection(y1, x1, y2, x2)\n  if (d < 0) return false\n  if (!(x1 + DX[d] * 2 == x2 && y1 + DY[d] * 2 == y2)) {\n    return false\n  }\n  return can_move(g, y1, x1, d)\n}\n\nexport const move = (\n  g: Array<Array<number>>,\n  y1: number,\n  x1: number,\n  y2: number,\n  x2: number\n) => {\n  const d = getDirection(y1, x1, y2, x2)\n  moveToDirection(g, y1, x1, d)\n}\n\nfunction moveToDirection(\n  g: Array<Array<number>>,\n  y1: number,\n  x1: number,\n  d: number\n) {\n  for (let i = 0; i < 2; i++) {\n    const ni = y1 + DY[d] * (i + 1)\n    const nj = x1 + DX[d] * (i + 1)\n    g[ni][nj] = i\n  }\n  g[y1][x1] = 0\n  return g\n}\n\nconst iToPos = (i: number) => {\n  // 上\n  if (i < 6) {\n    const y = Math.floor(i / 3)\n    const x = Math.floor(i % 3)\n    return [y, x + 2]\n  }\n  // 中央\n  if (i >= MI - 6) {\n    const tmp = i - (MI - 6)\n    const y = Math.floor(tmp / 3)\n    const x = Math.floor(tmp % 3)\n    return [y + 5, x + 2]\n  }\n  // 下\n  {\n    i -= 6\n    const y = Math.floor(i / 7)\n    const x = Math.floor(i % 7)\n    return [y + 2, x]\n  }\n}\n\n/**\n * 0: ゲーム中\n * 1: ゲーム終了(成功)\n * -1: ゲーム終了(失敗)\n */\nexport const judge = (g: Array<Array<number>>) => {\n  let cnt = 0\n  for (let posi = 0; posi < MI; posi++) {\n    const [i, j] = iToPos(posi)\n    if (g[i][j] == 1) {\n      for (let di = 0; di < 4; di++) {\n        if (can_move(g, i, j, di)) return 0\n      }\n      cnt++\n    }\n  }\n  if (cnt <= 1) return 1\n  return -1\n}\n\nfunction toState(g: Array<Array<number>>) {\n  let res = BigInt(0)\n  const b1 = BigInt(1)\n  for (let pos = 0; pos < MI; pos++) {\n    const [i, j] = iToPos(pos)\n    if (g[i][j] == 1) res |= b1 << BigInt(pos)\n  }\n  return res\n}\n\nfunction rotState(state: bigint) {\n  let res = BigInt(0)\n  const b1 = BigInt(1)\n  for (let pos = 0; pos < MI; pos++) {\n    if ((res >> BigInt(pos)) & b1) {\n      let [i, j] = iToPos(pos)\n      // rotate 90\n      const tmp = i\n      i = H - 1 - j\n      j = tmp\n      res |= b1 << BigInt(posToI(i, j))\n    }\n  }\n  return res\n}\n\nfunction flipState(state: bigint) {\n  let res = BigInt(0)\n  const b1 = BigInt(1)\n  for (let pos = 0; pos < MI; pos++) {\n    if ((res >> BigInt(pos)) & b1) {\n      // eslint-disable-next-line prefer-const\n      let [i, j] = iToPos(pos)\n      j = W - 1 - j\n      res |= b1 << BigInt(posToI(i, j))\n    }\n  }\n  return res\n}\n\nfunction revMove(g: Array<Array<number>>, y: number, x: number, d: number) {\n  for (let i = 0; i < 2; i++) {\n    const ni = y + DY[d] * (i + 1)\n    const nj = x + DX[d] * (i + 1)\n    g[ni][nj] = (i + 1) % 2\n  }\n  g[y][x] = 1\n}\n\nconst DFS_LIMIT = 4000000\n\nfunction dfs(\n  g: Array<Array<number>>,\n  arrived: Set<bigint>\n): Array<Array<Array<number>>> | null {\n  const state = toState(g)\n  if (arrived.has(state)) return null\n  if (arrived.size >= DFS_LIMIT) return null\n  const judge_res = judge(g)\n  if (judge_res == 1) {\n    return []\n  } else if (judge_res == -1) {\n    return null\n  }\n  for (let posi = 0; posi < MI; posi++) {\n    const [i, j] = iToPos(posi)\n    for (let di = 0; di < 4; di++) {\n      if (can_move(g, i, j, di)) {\n        moveToDirection(g, i, j, di)\n        const res = dfs(g, arrived)\n        if (res !== null) {\n          res.push(\n            g.map((v) => {\n              return [...v]\n            })\n          )\n          revMove(g, i, j, di)\n          return res\n        }\n        revMove(g, i, j, di)\n      }\n    }\n  }\n  {\n    let st = state\n    for (let i = 0; i < 4; i++) {\n      arrived.add(st)\n      arrived.add(flipState(st))\n      st = rotState(st)\n    }\n  }\n  return null\n}\n\nexport function solve(\n  g: Array<Array<number>>\n): Array<Array<Array<number>>> | null {\n  g = g.map((v) => {\n    return [...v]\n  })\n  const arrived = new Set<bigint>()\n\n  const res = dfs(g, arrived)\n\n  if (res != null) {\n    return res.reverse()\n  } else {\n    return res\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport Grid from './Grid'\nimport * as GameLogic from './gameLogic'\nimport IconButton from '@mui/material/Button'\nimport Button from '@mui/material/Button'\nimport { ArrowBack, ArrowForward, GamepadSharp } from '@material-ui/icons'\nimport styles from './Game.module.scss'\nimport Stack from '@mui/material/Stack'\nimport { green } from '@mui/material/colors'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport Typography from '@material-ui/core/Typography'\n\ntype GridType = Array<Array<number>>\ntype GameStatus = {\n  status: 0 | 1 | -1\n  text: string\n  color: string\n}\n\nconst copyGrid = (g: GridType) => {\n  return g.map((v) => {\n    return [...v]\n  })\n}\n\nconst getInitialGrid = () => {\n  const grid = [\n    '##111##',\n    '##111##',\n    '1111111',\n    '1110111',\n    '1111111',\n    '##111##',\n    '##111##',\n  ]\n\n  const res = []\n  for (let i = 0; i < grid.length; i++) {\n    const row = []\n    for (let j = 0; j < grid.length; j++) {\n      if (grid[i][j] == '#') row.push(-1)\n      else row.push(Number(grid[i][j]))\n    }\n    res.push(row)\n  }\n  return res\n}\n\nconst Game: React.FC = () => {\n  const [selectedPos, selectPos] = useState<null | Array<number>>(null)\n  const [history, setHistory] = useState<Array<GridType>>([getInitialGrid()])\n  const [stepNo, setStepNo] = useState<number>(0)\n  const [playHistory, setPlayHistory] = useState<boolean>(false)\n  const currentGrid = () => history[stepNo]\n\n  useEffect(() => {\n    // レンダー後に何かの処理をしないといけない、ということを React に伝えます\n    // デフォルトでは、副作用関数は初回のレンダー時および毎回の更新時に呼び出されます。\n\n    const interval = setInterval(() => {\n      if (playHistory) {\n        if (stepNo + 1 < history.length) {\n          setStepNo((no) => no + 1)\n        } else {\n          setPlayHistory(() => false)\n        }\n      }\n    }, 300)\n    return () => clearInterval(interval)\n  })\n\n  const onClickSquare = (r: number, w: number) => {\n    const grid = currentGrid()\n    if (GameLogic.judge(grid) != 0) return\n\n    if (!selectedPos) {\n      if (grid[r][w] == 1) {\n        selectPos([r, w])\n      }\n    } else {\n      if (\n        GameLogic.canMove(currentGrid(), selectedPos[0], selectedPos[1], r, w)\n      ) {\n        const g = copyGrid(currentGrid())\n        GameLogic.move(g, selectedPos[0], selectedPos[1], r, w)\n        setHistory([...history.slice(0, stepNo + 1), g])\n        setStepNo(stepNo + 1)\n      }\n      selectPos(null)\n    }\n  }\n  const statuText = () => {\n    const status = GameLogic.judge(currentGrid())\n    let text\n    let color = 'inherit'\n    if (status == 0) {\n      const rest = 32 - stepNo - 1\n      text = `あと ${rest} コ`\n    } else if (status == 1) {\n      text = '成功'\n      color = green['A400']\n    } else {\n      text = '失敗'\n      color = useTheme().palette.error.main\n    }\n    return (\n      <div style={{ color: color }}>\n        <Typography variant=\"h5\" color=\"inherit\" align=\"center\">\n          {text}\n        </Typography>\n      </div>\n    )\n  }\n\n  const nextHist = () => {\n    if (stepNo + 1 >= history.length) return\n    setStepNo(stepNo + 1)\n  }\n  const prevHist = () => {\n    if (stepNo <= 0) return\n    setStepNo(stepNo - 1)\n  }\n  const resetHist = () => {\n    setStepNo(0)\n    setHistory([getInitialGrid()])\n  }\n  const solve = () => {\n    const res = GameLogic.solve(currentGrid())\n\n    if (res) {\n      setHistory([...history.slice(0, stepNo + 1), ...res])\n      setPlayHistory(true)\n    } else {\n      alert('この状態からは解けないか、時間がかかるため探索できませんでした')\n    }\n  }\n\n  const canAutoSolve = () => {\n    const rest = 32 - stepNo - 1\n\n    return rest <= 20\n  }\n  return (\n    <div className={styles['game']}>\n      <div className={styles['game-grid']}>\n        <Grid\n          grid={currentGrid()}\n          selectedPos={selectedPos}\n          onClick={onClickSquare}\n        ></Grid>\n      </div>\n      <div style={{ marginBottom: '10px' }}>{statuText()}</div>\n      <Stack spacing={2} direction=\"row\">\n        <IconButton aria-label=\"back\" color=\"primary\" onClick={prevHist}>\n          <ArrowBack />\n        </IconButton>\n        <IconButton aria-label=\"forward\" color=\"primary\" onClick={nextHist}>\n          <ArrowForward />\n        </IconButton>\n        <Button variant=\"outlined\" color=\"primary\" onClick={resetHist}>\n          リセット\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\" onClick={solve}>\n          続きを自動で解く\n        </Button>\n      </Stack>\n    </div>\n  )\n}\nexport default Game\n","import * as React from 'react'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport Game from './Game'\n\ntype Props = RouteComponentProps\n\nconst Index = ({ history }: Props) => {\n  return (\n    <div style={{ width: '800px', margin: '0 auto' }}>\n      <h1>ペグソリティア</h1>\n      <div>\n        <Game />\n      </div>\n      <div>\n        <h2>遊び方</h2>\n        <ul>\n          <li>盤上に駒（ペグまたはボール）を配置する。</li>\n          <li>\n            駒が縦横に並んでいてかつその隣に駒がないとき、駒は他の駒を飛び越えることが出来る。\n          </li>\n          <li>飛び越えられた駒は盤から取り除く。</li>\n          <li>駒が1つになったら成功。中央に1つ残すのが最善とされる。</li>\n        </ul>\n        <a href=\"https://ja.wikipedia.org/wiki/%E3%83%9A%E3%82%B0%E3%83%BB%E3%82%BD%E3%83%AA%E3%83%86%E3%83%BC%E3%83%AB\">\n          https://ja.wikipedia.org/wiki/ペグ・ソリテール\n        </a>\n        より引用\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n","import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport * as Index from './page/Index'\nimport * as Solitaria from './page/solitaria/Index'\n\nconst App: React.FC = () => {\n  return (\n    // https://qiita.com/ry-itto/items/d11ae12dbe9cd32d83f8#%E4%BD%95%E3%82%92%E3%81%97%E3%81%9F%E3%82%89%E3%81%86%E3%81%BE%E3%81%8F%E3%81%84%E3%81%A3%E3%81%9F%E3%81%AE%E3%81%8B%E8%A7%A3%E6%B1%BA%E6%B3%95\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Index.default} />\n        <Route exact path=\"/solitaria\" component={Solitaria.default} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}